{"version":3,"sources":["api/common.ts","api/CreateBinPage.ts","api/ListBinsPage.ts","hooks/useInput.ts","pages/CreateBinPage/index.tsx","firebase.ts","pages/Login/index.tsx","parts/Header/index.tsx","pages/ListBinsPage/index.tsx","api/CreateOrganizationPage.ts","components/FormLoadSpinner/index.tsx","pages/CreateOrganizationPage/index.tsx","common/utils.ts","parts/Footer/index.tsx","redux/user/userTypes.ts","redux/user/userReducers.ts","redux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","commonHeaders","getRequest","url","a","config","axios","get","headers","response","console","error","postRequest","data","post","createBin","fetchOrganizations","log","useInput","initialValue","validationFunction","inputType","useState","value","setValue","setError","changeTextValue","e","target","bind","onChange","currentTarget","changeValue","onBlur","validateMacId","length","validateOrganization","CreateBinPage","binHeights","emptySpaces","bindMacId","macIdError","bindVolume","bindNoOfRacks","organizations","setOrganizations","bindOrganization","organizationError","isSubmitDisabled","setIsSubmitDisabled","selectOrganizationRef","useRef","handleFormSubmit","preventDefault","selectedOrganization","current","selectedOptions","macId","volume","noOfRacks","binHeight","emptySpace","organization","bin1","bin2","bin3","var1","var2","var3","binname","batterylevel","location","model","alert","useEffect","fetch","Object","values","Container","Row","Col","Form","onSubmit","Group","className","Label","Control","type","placeholder","Text","Select","name","disabled","ref","map","organizationId","selected","Button","variant","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","auth","getAuth","validateUsername","validatePassword","Login","bindUsername","usernameError","bindPassword","passwordError","showError","setShowError","handleSubmit","event","signInWithEmailAndPassword","FirebaseError","code","lg","span","offset","md","sm","Image","src","rounded","fluid","Alert","Header","useSelector","state","isLoggedIn","currentUsername","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","NavDropdown","title","Item","ListBinsPage","Card","Img","logo","Body","Title","createOrganization","FormLoadSpinner","color","secondaryColor","validateMobile","validateOrganizationMailId","validateOrganizationPassword","validateAdmin","CreateOrganizationPage","bindMailId","mailIdError","bindMobile","mobileError","bindAdmin","adminError","bindAdminMobile","adminMobileError","bindAdminMailId","adminMailIdError","vendorLogo","setVendorLogo","isFormSubmitted","setIsFormSubmitted","navigate","useNavigate","email","password","mobile","admin","adminMobile","adminEmail","storageRef","v4","uploadBytesResumable","task","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","filePath","file","files","Footer","style","backgroundColor","LOGIN_USER_SUCCESS","initialState","userReducer","action","store","createStore","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.057aa19c.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\r\nexport const BASE_URL = \"http://localhost:9999/api/\";\r\nconst commonHeaders = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Headers\": \"*\",\r\n};\r\nexport const getRequest = async (\r\n  url: string,\r\n  config: AxiosRequestConfig<any> = {}\r\n) => {\r\n  try {\r\n    const response = await axios.get(url, {\r\n      ...config,\r\n      headers: { ...config?.headers, ...commonHeaders },\r\n    });\r\n    if (!response) {\r\n      return null;\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error(`Error occured in get request Url:${url}`);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const postRequest = async (\r\n  url: string,\r\n  data: any,\r\n  config: AxiosRequestConfig<any> = {}\r\n) => {\r\n  try {\r\n    const response = await axios.post(url, data, {\r\n      ...config,\r\n      headers: { ...config?.headers, ...commonHeaders },\r\n    });\r\n    if (!response) {\r\n      return null;\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error(`Error occured in post request Url:${url}`, error);\r\n\r\n    return null;\r\n  }\r\n};\r\n","import { BASE_URL, postRequest } from \"./common\";\r\n\r\nexport const createBin = async (data: any) => {\r\n  const url = `${BASE_URL}bins`;\r\n  const response = await postRequest(url, data);\r\n  if (!response) {\r\n    return false;\r\n  }\r\n\r\n  return response;\r\n};\r\n","import { BASE_URL, getRequest } from \"./common\";\r\n\r\nexport const fetchOrganizations = async () => {\r\n  const url = `${BASE_URL}organizations`;\r\n  const response = await getRequest(url);\r\n  console.log(response);\r\n  if (!response) {\r\n    return null;\r\n  }\r\n  return response.data;\r\n};\r\n","import { ChangeEventHandler, FocusEventHandler, useState } from \"react\";\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  validationFunction: Function = () => true,\r\n  inputType: string = \"text\"\r\n): {\r\n  bind: {\r\n    value: string;\r\n    onChange: ChangeEventHandler;\r\n    onBlur: FocusEventHandler;\r\n  };\r\n  error: boolean;\r\n} => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [error, setError] = useState(false);\r\n  const changeTextValue = (e: any) => {\r\n    setValue(e.target.value);\r\n    console.log(value);\r\n  };\r\n  const bind = {\r\n    value: value,\r\n    onChange: (e: any) => {\r\n      switch (inputType) {\r\n        case \"text\": {\r\n          changeTextValue(e);\r\n          break;\r\n        }\r\n        case \"select\": {\r\n          const changeValue = (e: any) => {\r\n            setValue(e.currentTarget.value);\r\n            console.log(value);\r\n          };\r\n          changeValue(e);\r\n          break;\r\n        }\r\n        default: {\r\n          changeTextValue(e);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    onBlur: (e: any) => {\r\n      setError(validationFunction(e));\r\n    },\r\n  };\r\n  return { bind, error };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { createBin } from \"../../api/CreateBinPage\";\r\nimport { fetchOrganizations } from \"../../api/ListBinsPage\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\n\r\nconst validateMacId = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value?.length < 10) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganization = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value?.length < 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst CreateBinPage = () => {\r\n  const binHeights: { [key: string]: number } = {\r\n    \"25\": 48,\r\n    \"30\": 68,\r\n    \"50\": 70,\r\n  };\r\n  const emptySpaces: { [key: string]: number } = {\r\n    \"25\": 26,\r\n    \"30\": 32,\r\n    \"50\": 46,\r\n  };\r\n  const { bind: bindMacId, error: macIdError } = useInput(\"\", validateMacId);\r\n  const { bind: bindVolume } = useInput(\"25\");\r\n  const { bind: bindNoOfRacks } = useInput(\"45\");\r\n  const [organizations, setOrganizations] = useState<any[]>([]);\r\n  const { bind: bindOrganization, error: organizationError } = useInput(\r\n    \"\",\r\n    validateOrganization,\r\n    \"select\"\r\n  );\r\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\r\n  const selectOrganizationRef = useRef<HTMLSelectElement>(null);\r\n  const handleFormSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const selectedOrganization =\r\n      selectOrganizationRef.current?.selectedOptions[0].value;\r\n    if (!(macIdError && organizationError)) {\r\n      const data = {\r\n        macId: bindMacId.value,\r\n        volume: bindVolume.value,\r\n        noOfRacks: bindNoOfRacks.value,\r\n        binHeight: binHeights[bindVolume.value],\r\n        emptySpace: emptySpaces[bindVolume.value],\r\n        organization: selectedOrganization,\r\n        bin1: \"0\",\r\n        bin2: \"0\",\r\n        bin3: \"0\",\r\n        var1: \"Food waste\",\r\n        var2: \"Cans and plastic\",\r\n        var3: \"Non-Recyclable waste\",\r\n        binname: \"\",\r\n        batterylevel: \"\",\r\n        location: \"\",\r\n        model: \"3X25\",\r\n      };\r\n      console.log(data);\r\n      const response = await createBin(data);\r\n      if (!response) {\r\n        alert(\"Data not saved\");\r\n      } else {\r\n        alert(\"data saved successfully\");\r\n      }\r\n    } else {\r\n      setIsSubmitDisabled(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const response = await fetchOrganizations();\r\n      if (!response) {\r\n        setOrganizations([]);\r\n      } else {\r\n        const organizations: any = Object.values(response.organizations);\r\n        setOrganizations(organizations);\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>MAC ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter MAC ID\"\r\n                {...bindMacId}\r\n              />\r\n              {macIdError ? (\r\n                <Form.Text className=\"text-muted\">\r\n                  MAC ID cannot be less than 10 characters\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bin Volume</Form.Label>\r\n              <Form.Select name=\"volume\" {...bindVolume}>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"40\">40</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bin Height</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"binHeight\"\r\n                value={binHeights[bindVolume.value]}\r\n                disabled={true}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Empty Space</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"emptySpace\"\r\n                value={emptySpaces[bindVolume.value]}\r\n                disabled={true}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>No of Racks</Form.Label>\r\n              <Form.Select {...bindNoOfRacks}>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Organization</Form.Label>\r\n              <Form.Select\r\n                ref={selectOrganizationRef}\r\n                name=\"organization\"\r\n                placeholder=\"Enter Organization\"\r\n                {...bindOrganization}\r\n              >\r\n                {organizations.map((organization: any) => {\r\n                  console.log(organization.organizationId);\r\n                  return (\r\n                    <option\r\n                      selected\r\n                      value={organization.organizationId}\r\n                      key={organization.organizationId}\r\n                    >\r\n                      {organization.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Button variant=\"success\" type=\"submit\" disabled={isSubmitDisabled}>\r\n              Create Bin\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateBinPage;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// const app = initializeApp({\r\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n//   databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n//   projectId: process.env.REACT_APP_PROJECT_ID,\r\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n//   appId: process.env.REACT_APP_APP_ID,\r\n// });\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDihUPRt-wSwlLf7KL0BU9fMv26e0DjjUI\",\r\n  authDomain: \"test-f8201.firebaseapp.com\",\r\n  databaseURL: \"https://test-f8201-default-rtdb.firebaseio.com\",\r\n  projectId: \"test-f8201\",\r\n  storageBucket: \"test-f8201.appspot.com\",\r\n  messagingSenderId: \"1032517068228\",\r\n  appId: \"1:1032517068228:web:86090b124cb6837e2a3091\",\r\n  measurementId: \"G-DQH21MHYM5\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app);\r\nexport const auth = getAuth(app);\r\n\r\nexport default app;\r\n","import React, { useState } from \"react\";\r\n//custom componenets\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\n// custom stylesheets\r\nimport \"./login.css\";\r\n\r\n//Firebase functions\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth } from \"../../firebase\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport { FirebaseError } from \"firebase/app\";\r\nconst validateUsername = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value.length < 8) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst validatePassword = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value.length < 8) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  const { bind: bindUsername, error: usernameError } = useInput(\r\n    \"\",\r\n    validateUsername\r\n  );\r\n  const { bind: bindPassword, error: passwordError } = useInput(\r\n    \"\",\r\n    validatePassword\r\n  );\r\n\r\n  const [showError, setShowError] = useState(false);\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (!usernameError && !passwordError) {\r\n        const response = await signInWithEmailAndPassword(\r\n          auth,\r\n          bindUsername.value,\r\n          bindPassword.value\r\n        );\r\n        console.log(response);\r\n        // navigate(\"/create-organization\");\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof FirebaseError) {\r\n        console.error(\"Firebase Error:\", error.code);\r\n      } else {\r\n        console.error(\" Unknown Error\", error);\r\n      }\r\n      setShowError(true);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"center\">\r\n        <Container>\r\n          <Row>\r\n            <Col\r\n              lg={{ span: 4, offset: 4 }}\r\n              md={{ offset: 3, span: 6 }}\r\n              sm={{ span: 6, offset: 3 }}\r\n            >\r\n              <Image\r\n                src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/IMG-20211115-WA0038.jpg?alt=media&token=1a1515e3-d258-4aee-85ba-427775140de3\"\r\n                rounded\r\n                fluid\r\n              ></Image>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col\r\n              lg={{ span: 4, offset: 4 }}\r\n              md={{ span: 6, offset: 3 }}\r\n              sm={{ span: 6, offset: 3 }}\r\n            >\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"Enter username\"\r\n                    {...bindUsername}\r\n                  />\r\n                  {usernameError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Username must be minimum 8 characters length\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Enter password\"\r\n                    {...bindPassword}\r\n                  />\r\n                  {passwordError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Password must be minimum 8 characters length\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              {showError ? (\r\n                <Alert variant=\"danger\" className=\"mt-3 w-100 alert-width\">\r\n                  Invalid Login credentials\r\n                </Alert>\r\n              ) : null}\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./header.css\";\r\nexport const Header = () => {\r\n  const { isLoggedIn, currentUsername } = useSelector((state: any) => state);\r\n  console.log(isLoggedIn);\r\n  return (\r\n    <Navbar className=\"mb-3\" bg=\"primary\" expand=\"md\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Watch Your Waste</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <NavDropdown title=\"Organization\">\r\n              <NavDropdown.Item href=\"/list-organizations\">\r\n                List Organizations\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/create-organization\">\r\n                Create Organization\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Bin\">\r\n              <NavDropdown.Item href=\"/create-bin\">Create Bin</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Text>\r\n          {isLoggedIn ? currentUsername : <a href=\"login\">Log In</a>}\r\n        </Navbar.Text>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { IOrganizationCard } from \"../../interfaces/Bins\";\r\nimport { fetchOrganizations } from \"../../api/ListBinsPage\";\r\nimport \"./listbinspage.css\";\r\n\r\nconst ListBinsPage = () => {\r\n  const [organizations, setOrganizations] = useState<any>([]);\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      try {\r\n        const response = await fetchOrganizations();\r\n        console.log(response.organizations);\r\n        if (!response) {\r\n          setOrganizations([]);\r\n        } else {\r\n          console.log(Object.values(response.organizations));\r\n          setOrganizations(Object.values(response.organizations));\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Unable to fetch data\");\r\n        setOrganizations([]);\r\n      }\r\n    };\r\n    fetch();\r\n  }, []);\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {organizations.length > 0\r\n          ? organizations.map((organization: IOrganizationCard) => {\r\n              return (\r\n                <Col md={6} lg={4} sm={12} key={organization.organizationId}>\r\n                  <Card className=\"mb-3\">\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      className=\"bin-card-img\"\r\n                      src={organization.logo}\r\n                    ></Card.Img>\r\n                    <Card.Body>\r\n                      <Card.Title className=\"mb-2 card-title\">\r\n                        {organization.name}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        Organization Id:&nbsp;\r\n                        <strong> {organization.organizationId}</strong>\r\n                        <br />\r\n                        Organization: &nbsp;<strong>{organization.name}</strong>\r\n                        {/* <br />\r\n                        No of Bins Sold: &nbsp;\r\n                        <strong>{organization.noOfBinsSold}</strong>\r\n                        <br /> */}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          : \"No bins sold\"}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListBinsPage;\r\n","import { IOrganization } from \"../interfaces/Organizations\";\r\nimport { BASE_URL, postRequest } from \"./common\";\r\n\r\nexport const createOrganization = async (organization: IOrganization) => {\r\n  const url = `${BASE_URL}organizations`;\r\n  const response = await postRequest(url, organization);\r\n  if (!response) {\r\n    return null;\r\n  }\r\n  return response;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"./formloadspinner.css\";\r\nexport const FormLoadSpinner = () => {\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center vertical-center\">\r\n      <Loader type=\"TailSpin\" color=\"blue\" secondaryColor=\"gray\"></Loader>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { createOrganization } from \"../../api/CreateOrganizationPage\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport { IOrganization } from \"../../interfaces/Organizations\";\r\nimport { FormLoadSpinner } from \"../../components/FormLoadSpinner\";\r\nimport \"./createorganizationpage.css\";\r\n\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\nimport { storage } from \"../../firebase\";\r\nimport { getUUID } from \"../../common/utils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst validateOrganization = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 3) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateMobile = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 10) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganizationMailId = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 8) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganizationPassword = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 8) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateAdmin = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 3) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const CreateOrganizationPage = () => {\r\n  const { bind: bindOrganization, error: organizationError } = useInput(\r\n    \"\",\r\n    validateOrganization\r\n  );\r\n  const { bind: bindPassword, error: passwordError } = useInput(\r\n    \"\",\r\n    validateOrganizationPassword\r\n  );\r\n\r\n  const { bind: bindMailId, error: mailIdError } = useInput(\r\n    \"\",\r\n    validateOrganizationMailId\r\n  );\r\n\r\n  const { bind: bindMobile, error: mobileError } = useInput(\"\", validateMobile);\r\n\r\n  const { bind: bindAdmin, error: adminError } = useInput(\"\", validateAdmin);\r\n\r\n  const { bind: bindAdminMobile, error: adminMobileError } = useInput(\r\n    \"\",\r\n    validateMobile\r\n  );\r\n  const { bind: bindAdminMailId, error: adminMailIdError } = useInput(\r\n    \"\",\r\n    validateOrganizationMailId\r\n  );\r\n\r\n  const [vendorLogo, setVendorLogo] = useState<any>();\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const hanldeFileChange = (event: any) => {\r\n    const file = event.target.files[0];\r\n    console.log(file);\r\n    setVendorLogo(file);\r\n  };\r\n  const handleFormSubmit = async (event: any) => {\r\n    setIsFormSubmitted(true);\r\n    event.preventDefault();\r\n    try {\r\n      if (!organizationError && !passwordError && !mailIdError) {\r\n        const organization: IOrganization = {\r\n          email: bindMailId.value,\r\n          password: bindPassword.value,\r\n          name: bindOrganization.value,\r\n          mobile: bindMobile.value,\r\n          admin: bindAdmin.value,\r\n          adminMobile: bindAdminMobile.value,\r\n          adminEmail: bindAdminMailId.value,\r\n        };\r\n        const storageRef = ref(storage, `vendor_org/${getUUID()}`);\r\n        const uploadTask = await uploadBytesResumable(storageRef, vendorLogo);\r\n        uploadTask.task.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress =\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n            setIsFormSubmitted(false);\r\n          },\r\n          async () => {}\r\n        );\r\n        const filePath = await getDownloadURL(storageRef);\r\n        console.log(\"storagePath\", filePath);\r\n        organization[\"logo\"] = filePath;\r\n        const response = await createOrganization(organization);\r\n        console.log(`Response: ${response}`);\r\n        setIsFormSubmitted(false);\r\n        if (!response) {\r\n          alert(\"Data not saved\");\r\n          setIsFormSubmitted(false);\r\n        } else {\r\n          alert(\"Data saved sucessfully\");\r\n          navigate(\"/list-organizations\");\r\n        }\r\n      } else {\r\n        alert(\"please clear all errors\");\r\n        setIsFormSubmitted(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error while submitting form\", error);\r\n      setIsFormSubmitted(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {isFormSubmitted ? (\r\n        <FormLoadSpinner></FormLoadSpinner>\r\n      ) : (\r\n        <Container className=\"d-flex align-items-center justify-content-center center-align mb-5 mt-3\">\r\n          <Card>\r\n            <h2 className=\"text-center mt-3 mb-1\">Create Organization</h2>\r\n            <Card.Body>\r\n              <Form onSubmit={handleFormSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    {...bindOrganization}\r\n                    name=\"organization\"\r\n                  />\r\n                  {organizationError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Organization name alteast should have 3 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Mail ID</Form.Label>\r\n                  <Form.Control type=\"email\" name=\"mailId\" {...bindMailId} />\r\n                  {mailIdError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mail Should have atleast 8 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"organizationMobile\"\r\n                    {...bindMobile}\r\n                  />\r\n                  {mobileError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mobile Cannot be less than 10 characters.\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    {...bindPassword}\r\n                  />\r\n                  {passwordError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Password Should have atleast 8 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Logo</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    name=\"logo\"\r\n                    onChange={hanldeFileChange}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Admin</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"admin\" {...bindAdmin} />\r\n                  {adminError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Admin name cannot be less than 3 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Admin Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"admin\"\r\n                    {...bindAdminMailId}\r\n                  />\r\n                  {adminMailIdError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      MailCannot be less than 5 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Admin Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"input\"\r\n                    name=\"adminMobile\"\r\n                    {...bindAdminMobile}\r\n                  />\r\n                  {adminMobileError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mobile Cannot be less than 10 characters.\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-100\"\r\n                  disabled={organizationError || mailIdError || passwordError}\r\n                >\r\n                  Create Organization\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { v4 } from \"uuid\";\r\nexport const objToarray = (dict: any) => {\r\n  let arr = [];\r\n  for (let key in dict) {\r\n    if (dict.hasOwnProperty(key)) {\r\n      arr.push([key, dict[key]]);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const getUUID = () => {\r\n  return v4();\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./footer.css\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Container\r\n      className=\"footer\"\r\n      fluid\r\n      style={{\r\n        backgroundColor: \"lightgreen\",\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col className=\"mt-3 mb-1 right-margin-style\">\r\n          <Image\r\n            className=\"footer-brand-image\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/wywlogo-removebg.png?alt=media&token=dca92949-6eb4-4df6-8187-6ed20117a2ae\"\r\n          ></Image>\r\n\r\n          <h3>Meridian SPICKTECH</h3>\r\n          <div>Site No.13B-Cheran Coperative indutrial Estate</div>\r\n          <div>Vadavalli Road,Kalpanayakanpalayam</div>\r\n          <div>Coimbatore - 641108</div>\r\n        </Col>\r\n        <Col className=\"mt-3 mb-1 right-margin-style text-center my-auto d-flex justify-content-center align-items-center\">\r\n          <div>\r\n            <div>\r\n              <h4>Contact Info</h4>\r\n              <div>\r\n                <strong>Mobile: </strong> 9842480767\r\n              </div>\r\n            </div>\r\n            <strong>Website:</strong> www.watchyourwaste.in\r\n          </div>\r\n        </Col>\r\n        <Col className=\"mt-3 mb-1 text-center\">\r\n          <Image\r\n            className=\"footer-brand-image\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/srec_footer_logo-removebg-preview.png?alt=media&token=fc64b566-d791-4b52-85c4-b8e4dcd7b883\"\r\n          ></Image>\r\n          <div className=\"powered-by\">\r\n            Powered By Sri Ramakrishna Engineering College\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","export const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";\r\n","import { LOGIN_USER_SUCCESS } from \"./userTypes\";\r\n\r\nexport const initialState = {\r\n  currentUsername: \"admin\",\r\n  isLoggedIn: true,\r\n};\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore } from \"redux\";\r\nimport userReducer from \"./user/userReducers\";\r\nconst store = createStore(userReducer);\r\nexport default store;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport CreateBinPage from \"./pages/CreateBinPage\";\nimport Login from \"./pages/Login\";\nimport { Header } from \"./parts/Header\";\nimport ListBinsPage from \"./pages/ListBinsPage\";\nimport { CreateOrganizationPage } from \"./pages/CreateOrganizationPage\";\nimport { Footer } from \"./parts/Footer\";\nimport store from \"./redux/store\";\nimport { FormLoadSpinner } from \"./components/FormLoadSpinner\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header></Header>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Login></Login>}></Route>\n            <Route path=\"login\" element={<Login></Login>}></Route>\n            <Route\n              path=\"create-bin\"\n              element={<CreateBinPage></CreateBinPage>}\n            ></Route>\n            <Route\n              path=\"list-organizations\"\n              element={<ListBinsPage></ListBinsPage>}\n            ></Route>\n            <Route\n              path=\"create-organization\"\n              element={<CreateOrganizationPage></CreateOrganizationPage>}\n            ></Route>\n            <Route path=\"/test-spinner\" element={<FormLoadSpinner />}></Route>\n          </Routes>\n        </BrowserRouter>\n        <Footer></Footer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}