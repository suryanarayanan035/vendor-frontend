{"version":3,"sources":["api/common.ts","api/CreateBinPage.ts","api/ListBinsPage.ts","firebase.ts","hooks/useInput.ts","pages/CreateBinPage/index.tsx","pages/Login/index.tsx","parts/Header/index.tsx","pages/ListBinsPage/index.tsx","api/CreateOrganizationPage.ts","components/FormLoadSpinner/index.tsx","pages/CreateOrganizationPage/index.tsx","common/utils.ts","parts/Footer/index.tsx","redux/user/userTypes.ts","redux/user/userReducers.ts","redux/store.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["BASE_URL","commonHeaders","getRequest","url","a","config","abortController","axios","get","signal","headers","response","console","error","postRequest","data","post","createBin","fetchOrganizations","log","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","getStorage","auth","getAuth","firebaseSignInWithEmailAndPassword","email","password","signInWithEmailAndPassword","alert","message","useInput","initialValue","validationFunction","inputType","useState","value","setValue","setError","changeTextValue","e","target","bind","onChange","currentTarget","changeValue","onBlur","validateMacId","length","validateOrganization","validateBinName","CreateBinPage","binHeights","emptySpaces","bindMacId","macIdError","bindBinName","binNameError","bindVolume","bindNoOfRacks","organizations","bindOrganization","organizationError","isSubmitDisabled","setIsSubmitDisabled","selectOrganizationRef","useRef","handleFormSubmit","preventDefault","selectedOrganization","current","selectedOptions","macId","volume","noOfRacks","binHeight","emptySpace","organization","bin1","bin2","bin3","var1","var2","var3","binname","batterylevel","location","model","useAuthState","user","loading","navigate","useNavigate","useEffect","replace","Container","Row","Col","Form","onSubmit","Group","className","Label","Control","type","placeholder","Text","Select","name","disabled","ref","map","organizationId","selected","Button","variant","validateUsername","validatePassword","Login","bindUsername","usernameError","bindPassword","passwordError","showError","setShowError","handleSubmit","event","FirebaseError","code","lg","span","offset","md","sm","Image","src","rounded","fluid","Alert","Header","setUsername","Navbar","bg","expand","Brand","href","Toggle","Collapse","id","Nav","NavDropdown","title","Item","onClick","signOut","ListBinsPage","setOrganizations","AbortController","fetch","Object","values","abort","Card","Img","logo","Body","Title","createOrganization","FormLoadSpinner","color","secondaryColor","validateMobile","validateOrganizationMailId","validateOrganizationPassword","validateAdmin","CreateOrganizationPage","bindMailId","mailIdError","bindMobile","mobileError","bindAdmin","adminError","bindAdminMobile","adminMobileError","bindAdminMailId","adminMailIdError","vendorLogo","setVendorLogo","isFormSubmitted","setIsFormSubmitted","mobile","admin","adminMobile","adminEmail","storageRef","v4","uploadBytesResumable","task","on","snapshot","progress","bytesTransferred","totalBytes","getDownloadURL","filePath","file","files","Footer","style","backgroundColor","LOGIN_USER_SUCCESS","initialState","currentUsername","isLoggedIn","userReducer","state","action","store","createStore","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c1667e5.chunk.js","sourcesContent":["import axios, { AxiosRequestConfig } from \"axios\";\r\nexport const BASE_URL = \"http://3.110.148.123:9999/api/\";\r\nconst commonHeaders = {\r\n  \"Access-Control-Allow-Origin\": \"*\",\r\n  \"Access-Control-Allow-Headers\": \"*\",\r\n};\r\nexport const getRequest = async (\r\n  url: string,\r\n  config: AxiosRequestConfig<any> = {},\r\n  abortController?: AbortSignal\r\n) => {\r\n  try {\r\n    const response = await axios.get(url, {\r\n      signal: abortController,\r\n      ...config,\r\n      headers: { ...config?.headers, ...commonHeaders },\r\n    });\r\n    if (!response) {\r\n      return null;\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error(`Error occured in get request Url:${url}`);\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const postRequest = async (\r\n  url: string,\r\n  data: any,\r\n  config: AxiosRequestConfig<any> = {}\r\n) => {\r\n  try {\r\n    const response = await axios.post(url, data, {\r\n      ...config,\r\n      headers: { ...config?.headers, ...commonHeaders },\r\n    });\r\n    if (!response) {\r\n      return null;\r\n    }\r\n    return response;\r\n  } catch (error) {\r\n    console.error(`Error occured in post request Url:${url}`, error);\r\n\r\n    return null;\r\n  }\r\n};\r\n","import { BASE_URL, postRequest } from \"./common\";\r\n\r\nexport const createBin = async (data: any) => {\r\n  const url = `${BASE_URL}bins`;\r\n  const response = await postRequest(url, data);\r\n  if (!response) {\r\n    return false;\r\n  }\r\n\r\n  return response;\r\n};\r\n","import { BASE_URL, getRequest } from \"./common\";\r\n\r\nexport const fetchOrganizations = async (abortController?: AbortSignal) => {\r\n  const url = `${BASE_URL}organizations`;\r\n  const response = await getRequest(url, {}, abortController);\r\n  console.log(response);\r\n  if (!response) {\r\n    return null;\r\n  }\r\n  return response.data;\r\n};\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// const app = initializeApp({\r\n//   apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n//   authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n//   databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n//   projectId: process.env.REACT_APP_PROJECT_ID,\r\n//   storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n//   messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n//   appId: process.env.REACT_APP_APP_ID,\r\n// });\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDihUPRt-wSwlLf7KL0BU9fMv26e0DjjUI\",\r\n  authDomain: \"test-f8201.firebaseapp.com\",\r\n  databaseURL: \"https://test-f8201-default-rtdb.firebaseio.com\",\r\n  projectId: \"test-f8201\",\r\n  storageBucket: \"test-f8201.appspot.com\",\r\n  messagingSenderId: \"1032517068228\",\r\n  appId: \"1:1032517068228:web:86090b124cb6837e2a3091\",\r\n  measurementId: \"G-DQH21MHYM5\",\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const storage = getStorage(app);\r\nexport const auth = getAuth(app);\r\n\r\nexport const firebaseSignInWithEmailAndPassword = async (\r\n  auth: any,\r\n  email: string,\r\n  password: string\r\n) => {\r\n  try {\r\n    return await signInWithEmailAndPassword(auth, email, password);\r\n  } catch (error: any) {\r\n    console.error(\"Error occured\");\r\n    alert(error.message);\r\n  }\r\n};\r\n\r\nexport const firebaseSignout = () => {\r\n  auth.signOut();\r\n};\r\n\r\nexport default app;\r\n","import { ChangeEventHandler, FocusEventHandler, useState } from \"react\";\r\n\r\nexport const useInput = (\r\n  initialValue: string,\r\n  validationFunction: Function = () => true,\r\n  inputType: string = \"text\"\r\n): {\r\n  bind: {\r\n    value: string;\r\n    onChange: ChangeEventHandler;\r\n    onBlur: FocusEventHandler;\r\n  };\r\n  error: boolean;\r\n} => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const [error, setError] = useState(false);\r\n  const changeTextValue = (e: any) => {\r\n    setValue(e.target.value);\r\n    console.log(value);\r\n  };\r\n  const bind = {\r\n    value: value,\r\n    onChange: (e: any) => {\r\n      switch (inputType) {\r\n        case \"text\": {\r\n          changeTextValue(e);\r\n          break;\r\n        }\r\n        case \"select\": {\r\n          const changeValue = (e: any) => {\r\n            setValue(e.currentTarget.value);\r\n            console.log(value);\r\n          };\r\n          changeValue(e);\r\n          break;\r\n        }\r\n        default: {\r\n          changeTextValue(e);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n    onBlur: (e: any) => {\r\n      setError(validationFunction(e));\r\n    },\r\n  };\r\n  return { bind, error };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { createBin } from \"../../api/CreateBinPage\";\r\nimport { fetchOrganizations } from \"../../api/ListBinsPage\";\r\nimport { auth } from \"../../firebase\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\n\r\nconst validateMacId = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value?.length < 10) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganization = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value?.length < 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateBinName = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value?.length < 1) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst CreateBinPage = () => {\r\n  const binHeights: { [key: string]: number } = {\r\n    \"25\": 48,\r\n    \"30\": 68,\r\n    \"50\": 70,\r\n  };\r\n  const emptySpaces: { [key: string]: number } = {\r\n    \"25\": 26,\r\n    \"30\": 32,\r\n    \"50\": 46,\r\n  };\r\n  const { bind: bindMacId, error: macIdError } = useInput(\"\", validateMacId);\r\n  const { bind: bindBinName, error: binNameError } = useInput(\r\n    \"\",\r\n    validateBinName\r\n  );\r\n  const { bind: bindVolume } = useInput(\"25\");\r\n  const { bind: bindNoOfRacks } = useInput(\"45\");\r\n  const [organizations, setOrganizations] = useState<any[]>([]);\r\n  const { bind: bindOrganization, error: organizationError } = useInput(\r\n    \"\",\r\n    validateOrganization,\r\n    \"select\"\r\n  );\r\n  const [isSubmitDisabled, setIsSubmitDisabled] = useState(false);\r\n  const selectOrganizationRef = useRef<HTMLSelectElement>(null);\r\n  const handleFormSubmit = async (e: any) => {\r\n    e.preventDefault();\r\n    const selectedOrganization =\r\n      selectOrganizationRef.current?.selectedOptions[0].value;\r\n    if (!(macIdError && organizationError)) {\r\n      const data = {\r\n        macId: bindMacId.value,\r\n        volume: bindVolume.value,\r\n        noOfRacks: bindNoOfRacks.value,\r\n        binHeight: binHeights[bindVolume.value],\r\n        emptySpace: emptySpaces[bindVolume.value],\r\n        organization: selectedOrganization,\r\n        bin1: \"0\",\r\n        bin2: \"0\",\r\n        bin3: \"0\",\r\n        var1: \"Food waste\",\r\n        var2: \"Cans and plastic\",\r\n        var3: \"Non-Recyclable waste\",\r\n        binname: bindBinName.value,\r\n        batterylevel: \"\",\r\n        location: \"\",\r\n        model: \"3X25\",\r\n      };\r\n      console.log(data);\r\n      const response = await createBin(data);\r\n      if (!response) {\r\n        alert(\"Data not saved\");\r\n      } else {\r\n        alert(\"data saved successfully\");\r\n      }\r\n    } else {\r\n      setIsSubmitDisabled(true);\r\n    }\r\n  };\r\n  const [user, loading] = useAuthState(auth);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      console.log(\"loading\");\r\n    } else {\r\n      if (user) {\r\n        const fetch = async () => {\r\n          const response = await fetchOrganizations();\r\n          if (!response) {\r\n            setOrganizations([]);\r\n          } else {\r\n            const organizations: any = Object.values(response.organizations);\r\n            setOrganizations(organizations);\r\n          }\r\n        };\r\n      } else {\r\n        navigate(\"/login\", { replace: true });\r\n      }\r\n    }\r\n    return () => {};\r\n  }, [user, loading]);\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Form onSubmit={handleFormSubmit}>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>MAC ID</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter MAC ID\"\r\n                {...bindMacId}\r\n              />\r\n              {macIdError ? (\r\n                <Form.Text className=\"text-muted\">\r\n                  MAC ID cannot be less than 10 characters\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bin Volume</Form.Label>\r\n              <Form.Select name=\"volume\" {...bindVolume}>\r\n                <option value=\"25\">25</option>\r\n                <option value=\"30\">30</option>\r\n                <option value=\"40\">40</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bin Height</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"binHeight\"\r\n                value={binHeights[bindVolume.value]}\r\n                disabled={true}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Empty Space</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"emptySpace\"\r\n                value={emptySpaces[bindVolume.value]}\r\n                disabled={true}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>No of Racks</Form.Label>\r\n              <Form.Select {...bindNoOfRacks}>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Bin Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"binName\"\r\n                {...bindBinName}\r\n              ></Form.Control>\r\n              {binNameError ? (\r\n                <Form.Text className=\"text-muted text-danger\">\r\n                  Bin name cannot be empty\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Organization</Form.Label>\r\n              <Form.Select\r\n                ref={selectOrganizationRef}\r\n                name=\"organization\"\r\n                placeholder=\"Enter Organization\"\r\n                {...bindOrganization}\r\n              >\r\n                {organizations.map((organization: any) => {\r\n                  console.log(organization.organizationId);\r\n                  return (\r\n                    <option\r\n                      selected\r\n                      value={organization.email}\r\n                      key={organization.organizationId}\r\n                    >\r\n                      {organization.name}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Button variant=\"success\" type=\"submit\" disabled={isSubmitDisabled}>\r\n              Create Bin\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateBinPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n//custom componenets\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\n// custom stylesheets\r\nimport \"./login.css\";\r\n\r\n//Firebase functions\r\nimport { auth, firebaseSignInWithEmailAndPassword } from \"../../firebase\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport { FirebaseError } from \"firebase/app\";\r\n\r\nconst validateUsername = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value.length < 8) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst validatePassword = (e: any) => {\r\n  const { value } = e.target;\r\n  if (!value || value.length < 8) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nconst Login = () => {\r\n  const { bind: bindUsername, error: usernameError } = useInput(\r\n    \"\",\r\n    validateUsername\r\n  );\r\n  const { bind: bindPassword, error: passwordError } = useInput(\r\n    \"\",\r\n    validatePassword\r\n  );\r\n\r\n  const [showError, setShowError] = useState(false);\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const navigate = useNavigate();\r\n  console.log(\"user\", user);\r\n  useEffect(() => {\r\n    if (user) {\r\n      return navigate(\"/list-organizations\");\r\n    }\r\n  }, [user]);\r\n\r\n  const handleSubmit = async (event: any) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (!usernameError && !passwordError) {\r\n        const response = await firebaseSignInWithEmailAndPassword(\r\n          auth,\r\n          bindUsername.value,\r\n          bindPassword.value\r\n        );\r\n        console.log(response);\r\n        // navigate(\"/create-organization\");\r\n      }\r\n    } catch (error) {\r\n      if (error instanceof FirebaseError) {\r\n        console.error(\"Firebase Error:\", error.code);\r\n      } else {\r\n        console.error(\" Unknown Error\", error);\r\n      }\r\n      setShowError(true);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"center\">\r\n      <Container>\r\n        <Row>\r\n          <Col\r\n            lg={{ span: 4, offset: 4 }}\r\n            md={{ offset: 3, span: 6 }}\r\n            sm={{ span: 6, offset: 3 }}\r\n          >\r\n            <Image\r\n              src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/IMG-20211115-WA0038.jpg?alt=media&token=1a1515e3-d258-4aee-85ba-427775140de3\"\r\n              rounded\r\n              fluid\r\n            ></Image>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col\r\n            lg={{ span: 4, offset: 4 }}\r\n            md={{ span: 6, offset: 3 }}\r\n            sm={{ span: 6, offset: 3 }}\r\n          >\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter username\"\r\n                  {...bindUsername}\r\n                />\r\n                {usernameError ? (\r\n                  <Form.Text className=\"text-danger\">\r\n                    Username must be minimum 8 characters length\r\n                  </Form.Text>\r\n                ) : null}\r\n              </Form.Group>\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter password\"\r\n                  {...bindPassword}\r\n                />\r\n                {passwordError ? (\r\n                  <Form.Text className=\"text-danger\">\r\n                    Password must be minimum 8 characters length\r\n                  </Form.Text>\r\n                ) : null}\r\n              </Form.Group>\r\n              <div className=\"d-grid gap-2\">\r\n                <Button variant=\"primary\" type=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n            {showError ? (\r\n              <Alert variant=\"danger\" className=\"mt-3 w-100 alert-width\">\r\n                Invalid Login credentials\r\n              </Alert>\r\n            ) : null}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n    //   <h1>Meridian Spicktech Welcomes You</h1>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Navbar, Nav, NavDropdown } from \"react-bootstrap\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth, firebaseSignout } from \"../../firebase\";\r\nimport \"./header.css\";\r\nexport const Header = () => {\r\n  const [username, setUsername] = useState<any>(\"Login\");\r\n  const [user] = useAuthState(auth);\r\n  useEffect(() => {\r\n    if (user) {\r\n      setUsername(user.email);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <Navbar className=\"mb-3\" bg=\"primary\" expand=\"md\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"/\">Watch Your Waste</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <NavDropdown title=\"Organization\">\r\n              <NavDropdown.Item href=\"/list-organizations\">\r\n                List Organizations\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/create-organization\">\r\n                Create Organization\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n            <NavDropdown title=\"Bin\">\r\n              <NavDropdown.Item href=\"/create-bin\">Create Bin</NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n        <Navbar.Text>\r\n          {user ? (\r\n            <a\r\n              href=\"#\"\r\n              onClick={() => {\r\n                firebaseSignout();\r\n              }}\r\n            >\r\n              Signout\r\n            </a>\r\n          ) : (\r\n            <a href=\"login\">Signin</a>\r\n          )}\r\n        </Navbar.Text>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { IOrganizationCard } from \"../../interfaces/Bins\";\r\nimport { fetchOrganizations } from \"../../api/ListBinsPage\";\r\nimport \"./listbinspage.css\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../../firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ListBinsPage = () => {\r\n  const [organizations, setOrganizations] = useState<any>([]);\r\n  const [user, loading] = useAuthState(auth);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const abortController = new AbortController();\r\n    const fetch = async () => {\r\n      try {\r\n        const response = await fetchOrganizations(abortController.signal);\r\n        console.log(response.organizations);\r\n        if (!response) {\r\n          console.error(\"Can't fetch data\");\r\n        } else {\r\n          console.log(Object.values(response.organizations));\r\n          setOrganizations(Object.values(response.organizations));\r\n        }\r\n      } catch (error) {\r\n        console.log(\"Unable to fetch data\");\r\n        setOrganizations([]);\r\n      }\r\n    };\r\n    if (loading) {\r\n      console.log(\"Loading\");\r\n    } else {\r\n      console.log(\"Completed loading\");\r\n      if (!user) {\r\n        abortController.abort();\r\n        return navigate(\"/login\");\r\n      } else {\r\n        console.log(\"inside else in listbinspage\");\r\n        fetch();\r\n      }\r\n    }\r\n\r\n    // return () => {\r\n    //   abortController.abort();\r\n    // };\r\n  }, [user, loading]);\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        {organizations.length > 0\r\n          ? organizations.map((organization: IOrganizationCard) => {\r\n              return (\r\n                <Col md={6} lg={4} sm={12} key={organization.organizationId}>\r\n                  <Card className=\"mb-3\">\r\n                    <Card.Img\r\n                      variant=\"top\"\r\n                      className=\"bin-card-img\"\r\n                      src={organization.logo}\r\n                    ></Card.Img>\r\n                    <Card.Body>\r\n                      <Card.Title className=\"mb-2 card-title\">\r\n                        {organization.name}\r\n                      </Card.Title>\r\n                      <Card.Text>\r\n                        Organization Id:&nbsp;\r\n                        <strong> {organization.organizationId}</strong>\r\n                        <br />\r\n                        Organization: &nbsp;<strong>{organization.name}</strong>\r\n                        {/* <br />\r\n                        No of Bins Sold: &nbsp;\r\n                        <strong>{organization.noOfBinsSold}</strong>\r\n                        <br /> */}\r\n                      </Card.Text>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })\r\n          : \"No bins sold\"}\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ListBinsPage;\r\n","import { IOrganization } from \"../interfaces/Organizations\";\r\nimport { BASE_URL, postRequest } from \"./common\";\r\n\r\nexport const createOrganization = async (organization: IOrganization) => {\r\n  const url = `${BASE_URL}organizations`;\r\n  const response = await postRequest(url, organization);\r\n  if (!response) {\r\n    return null;\r\n  }\r\n  return response;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport \"./formloadspinner.css\";\r\nexport const FormLoadSpinner = () => {\r\n  return (\r\n    <Container className=\"d-flex align-items-center justify-content-center vertical-center\">\r\n      <Loader type=\"TailSpin\" color=\"blue\" secondaryColor=\"gray\"></Loader>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\n\r\nimport { createOrganization } from \"../../api/CreateOrganizationPage\";\r\nimport { useInput } from \"../../hooks/useInput\";\r\nimport { IOrganization } from \"../../interfaces/Organizations\";\r\nimport { FormLoadSpinner } from \"../../components/FormLoadSpinner\";\r\nimport \"./createorganizationpage.css\";\r\n\r\nimport { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\r\nimport { auth, storage } from \"../../firebase\";\r\nimport { getUUID } from \"../../common/utils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nconst validateOrganization = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 3) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateMobile = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 10) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganizationMailId = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 8) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateOrganizationPassword = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 8) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nconst validateAdmin = (event: any) => {\r\n  const { value } = event.target;\r\n  if (value.length < 3) {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const CreateOrganizationPage = () => {\r\n  const { bind: bindOrganization, error: organizationError } = useInput(\r\n    \"\",\r\n    validateOrganization\r\n  );\r\n  const { bind: bindPassword, error: passwordError } = useInput(\r\n    \"\",\r\n    validateOrganizationPassword\r\n  );\r\n\r\n  const { bind: bindMailId, error: mailIdError } = useInput(\r\n    \"\",\r\n    validateOrganizationMailId\r\n  );\r\n\r\n  const { bind: bindMobile, error: mobileError } = useInput(\"\", validateMobile);\r\n\r\n  const { bind: bindAdmin, error: adminError } = useInput(\"\", validateAdmin);\r\n\r\n  const { bind: bindAdminMobile, error: adminMobileError } = useInput(\r\n    \"\",\r\n    validateMobile\r\n  );\r\n  const { bind: bindAdminMailId, error: adminMailIdError } = useInput(\r\n    \"\",\r\n    validateOrganizationMailId\r\n  );\r\n\r\n  const [vendorLogo, setVendorLogo] = useState<any>();\r\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\r\n  const [user, loading] = useAuthState(auth);\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (loading) {\r\n      console.log(\"loading\");\r\n    } else {\r\n      console.log(\"loading Completed\");\r\n      if (!user) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n\r\n    return () => {};\r\n  }, [user]);\r\n  const hanldeFileChange = (event: any) => {\r\n    const file = event.target.files[0];\r\n    console.log(file);\r\n    setVendorLogo(file);\r\n  };\r\n  const handleFormSubmit = async (event: any) => {\r\n    setIsFormSubmitted(true);\r\n    event.preventDefault();\r\n    try {\r\n      if (!organizationError && !passwordError && !mailIdError) {\r\n        const organization: IOrganization = {\r\n          email: bindMailId.value,\r\n          password: bindPassword.value,\r\n          name: bindOrganization.value,\r\n          mobile: bindMobile.value,\r\n          admin: bindAdmin.value,\r\n          adminMobile: bindAdminMobile.value,\r\n          adminEmail: bindAdminMailId.value,\r\n        };\r\n        const storageRef = ref(storage, `vendor_org/${getUUID()}`);\r\n        const uploadTask = await uploadBytesResumable(storageRef, vendorLogo);\r\n        uploadTask.task.on(\r\n          \"state_changed\",\r\n          (snapshot) => {\r\n            const progress =\r\n              (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            console.log(progress);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n            setIsFormSubmitted(false);\r\n          },\r\n          async () => {}\r\n        );\r\n        const filePath = await getDownloadURL(storageRef);\r\n        console.log(\"storagePath\", filePath);\r\n        organization[\"logo\"] = filePath;\r\n        const response = await createOrganization(organization);\r\n        console.log(`Response: ${response}`);\r\n        setIsFormSubmitted(false);\r\n        if (!response) {\r\n          alert(\"Data not saved\");\r\n          setIsFormSubmitted(false);\r\n        } else {\r\n          alert(\"Data saved sucessfully\");\r\n          navigate(\"/list-organizations\");\r\n        }\r\n      } else {\r\n        alert(\"please clear all errors\");\r\n        setIsFormSubmitted(false);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error while submitting form\", error);\r\n      setIsFormSubmitted(false);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      {isFormSubmitted ? (\r\n        <FormLoadSpinner></FormLoadSpinner>\r\n      ) : (\r\n        <Container className=\"d-flex align-items-center justify-content-center center-align mb-5 mt-3\">\r\n          <Card>\r\n            <h2 className=\"text-center mt-3 mb-1\">Create Organization</h2>\r\n            <Card.Body>\r\n              <Form onSubmit={handleFormSubmit}>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    {...bindOrganization}\r\n                    name=\"organization\"\r\n                  />\r\n                  {organizationError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Organization name alteast should have 3 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Mail ID</Form.Label>\r\n                  <Form.Control type=\"email\" name=\"mailId\" {...bindMailId} />\r\n                  {mailIdError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mail Should have atleast 8 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"organizationMobile\"\r\n                    {...bindMobile}\r\n                  />\r\n                  {mobileError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mobile Cannot be less than 10 characters.\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Password</Form.Label>\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    {...bindPassword}\r\n                  />\r\n                  {passwordError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Password Should have atleast 8 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Logo</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    name=\"logo\"\r\n                    onChange={hanldeFileChange}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Organization Admin</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"admin\" {...bindAdmin} />\r\n                  {adminError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Admin name cannot be less than 3 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Admin Email</Form.Label>\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    name=\"admin\"\r\n                    {...bindAdminMailId}\r\n                  />\r\n                  {adminMailIdError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      MailCannot be less than 5 characters\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label>Admin Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"input\"\r\n                    name=\"adminMobile\"\r\n                    {...bindAdminMobile}\r\n                  />\r\n                  {adminMobileError ? (\r\n                    <Form.Text className=\"text-danger\">\r\n                      Mobile Cannot be less than 10 characters.\r\n                    </Form.Text>\r\n                  ) : null}\r\n                </Form.Group>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"w-100\"\r\n                  disabled={organizationError || mailIdError || passwordError}\r\n                >\r\n                  Create Organization\r\n                </Button>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Container>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { v4 } from \"uuid\";\r\nexport const objToarray = (dict: any) => {\r\n  let arr = [];\r\n  for (let key in dict) {\r\n    if (dict.hasOwnProperty(key)) {\r\n      arr.push([key, dict[key]]);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\nexport const getUUID = () => {\r\n  return v4();\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport \"./footer.css\";\r\nexport const Footer = () => {\r\n  return (\r\n    <Container\r\n      className=\"footer\"\r\n      fluid\r\n      style={{\r\n        backgroundColor: \"lightgreen\",\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col className=\"mt-3 mb-1 right-margin-style\">\r\n          <Image\r\n            className=\"footer-brand-image\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/wywlogo-removebg.png?alt=media&token=dca92949-6eb4-4df6-8187-6ed20117a2ae\"\r\n          ></Image>\r\n\r\n          <h3>Meridian SPICKTECH</h3>\r\n          <div>Site No.13B-Cheran Coperative indutrial Estate</div>\r\n          <div>Vadavalli Road,Kalpanayakanpalayam</div>\r\n          <div>Coimbatore - 641108</div>\r\n        </Col>\r\n        <Col className=\"mt-3 mb-1 right-margin-style text-center my-auto d-flex justify-content-center align-items-center\">\r\n          <div>\r\n            <div>\r\n              <h4>Contact Info</h4>\r\n              <div>\r\n                <strong>Mobile: </strong> 9842480767\r\n              </div>\r\n            </div>\r\n            <strong>Website:</strong> www.watchyourwaste.in\r\n          </div>\r\n        </Col>\r\n        <Col className=\"mt-3 mb-1 text-center\">\r\n          <Image\r\n            className=\"footer-brand-image\"\r\n            src=\"https://firebasestorage.googleapis.com/v0/b/test-f8201.appspot.com/o/srec_footer_logo-removebg-preview.png?alt=media&token=fc64b566-d791-4b52-85c4-b8e4dcd7b883\"\r\n          ></Image>\r\n          <div className=\"powered-by\">\r\n            Powered By Sri Ramakrishna Engineering College\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n","export const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_FAILURE = \"LOGIN_USER_FAILURE\";\r\n","import { LOGIN_USER_SUCCESS } from \"./userTypes\";\r\n\r\nexport const initialState = {\r\n  currentUsername: \"admin\",\r\n  isLoggedIn: true,\r\n};\r\nexport const userReducer = (state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case LOGIN_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { createStore } from \"redux\";\r\nimport userReducer from \"./user/userReducers\";\r\nconst store = createStore(userReducer);\r\nexport default store;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport CreateBinPage from \"./pages/CreateBinPage\";\nimport Login from \"./pages/Login\";\nimport { Header } from \"./parts/Header\";\nimport ListBinsPage from \"./pages/ListBinsPage\";\nimport { CreateOrganizationPage } from \"./pages/CreateOrganizationPage\";\nimport { Footer } from \"./parts/Footer\";\nimport store from \"./redux/store\";\nimport { FormLoadSpinner } from \"./components/FormLoadSpinner\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Header></Header>\n        <BrowserRouter>\n          <Routes>\n            <Route path=\"/\" element={<Login></Login>}></Route>\n            <Route path=\"login\" element={<Login></Login>}></Route>\n            <Route\n              path=\"create-bin\"\n              element={<CreateBinPage></CreateBinPage>}\n            ></Route>\n            <Route\n              path=\"list-organizations\"\n              element={<ListBinsPage></ListBinsPage>}\n            ></Route>\n            <Route\n              path=\"create-organization\"\n              element={<CreateOrganizationPage></CreateOrganizationPage>}\n            ></Route>\n            <Route path=\"/test-spinner\" element={<FormLoadSpinner />}></Route>\n          </Routes>\n        </BrowserRouter>\n        <Footer></Footer>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}